// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model UserAccount {
  UserID        Int          @id @map("_id") @db.Int
  Password      String
  Email         String      @unique
  Postal_Code   String
  State         String
  Address_line1 String      @default(" ")
  Address_line2 String?     @default(" ")
  fname         String
  lname         String
  Cart          Cart[]          
  Invoice       Invoice[]      
}

model Type {
  TypeID    Int    @id @map("_id") @db.Int
  TypeName  String?
  products  Product[]
}

model Country {
  CountryID   Int    @id @map("_id") @db.Int
  CountryName String
  products  Product[]
}

model Region {
  RegionID   Int    @id @map("_id") @db.Int
  RegionName String
  products  Product[]
}

model Product {
  ProductID   Int         @id @map("_id") @db.Int
  Name        String
  Description String?
  Price       Float
  Stock       Int
  Image       String?
  type        Type        @relation(fields: [typeID], references: [TypeID])
  typeID      Int         @db.Int
  country     Country     @relation(fields: [countryID], references: [CountryID])
  countryID   Int         @db.Int
  region      Region      @relation(fields: [regionID], references: [RegionID])
  regionID    Int         @db.Int
  CartProduct CartProduct[]  
}

model CartProduct {
  CartProductID Int         @id @map("_id") @db.Int
  product       Product     @relation(fields: [productID], references: [ProductID])
  productID     Int         @db.Int
  CartQuantity  CartQuantity[]
}

model Cart {
  CartID        Int           @id @map("_id") @db.Int
  user          UserAccount   @relation(fields: [userID], references: [UserID])
  userID        Int           @db.Int
  totalPrice    Float
  Shipping      Float?
  Tax           Float
  Subtotal      Float
  Totalquantity Int
  Invoice       Invoice[]    
  CQR           CartToQuantityRelation[]   
}

model CartQuantity {
  CartQuantityID Int                  @id @map("_id") @db.Int
  cartProduct    CartProduct          @relation(fields: [cartProductID], references: [CartProductID])
  cartProductID  Int                  @db.Int
  Quantity       Int
  QuantityPrice  Float
  CartToQuantity CartToQuantityRelation[]
}

model CartToQuantityRelation {
  CQR             Int                  @id @map("_id") @db.Int
  cartQuantity    CartQuantity         @relation(fields: [cartQuantityID], references: [CartQuantityID])
  cartQuantityID  Int                  @db.Int
  cart            Cart                 @relation(fields: [cartID], references: [CartID])
  cartID          Int                  @db.Int
}

model Invoice {
  InvoiceID    Int       @id @map("_id") @db.Int
  purchaseDate DateTime
  user         UserAccount  @relation(fields: [userID], references: [UserID])
  userID       Int      @db.Int
  cart         Cart         @relation(fields: [cartID], references: [CartID])
  cartID       Int      @db.Int
  dateCreated  DateTime
}

model Billing {
  BillingID        Int  @id @map("_id") @db.Int
  cardNumber       Int
  ExpirationMonth  Int
  ExpirationYear   Int
  securityCode     Int
}